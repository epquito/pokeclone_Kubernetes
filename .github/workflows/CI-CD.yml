name: pokeclone-cicd
on:
  push:
    branches:
      - eks-rds
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  K8S_NAMESPACE: 'pokeclone'
  AWS_REGION: 'us-east-1'
  EKS_CLUSTER_NAME: 'pokemon-cluster'

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        with:
          ref: eks-rds

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: build and push frontend docker image
        uses: docker/build-push-action@v2
        with:
          context: ./front_end
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/pokeclone-front-end:eks-rds

      - name: build and push backend docker image
        uses: docker/build-push-action@v2
        with:
          context: ./back_end
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/pokeclone-back-end:eks-rds

  CD:
    needs: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: eks-rds

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --kubeconfig ./kubeconfig.yml
          echo "KUBECONFIG=$(pwd)/kubeconfig.yml" >> $GITHUB_ENV
        # Set the kubeconfig file path explicitly and add it to the GITHUB_ENV for subsequent steps to recognize.

      - name: Deploy namespace and resource quota to EKS
        run: |
          kubectl apply -f k8s/1-namespace -n ${{ env.K8S_NAMESPACE }}
          kubectl apply -f k8s/2-quota -n ${{ env.K8S_NAMESPACE }}

      - name: Deploy database to EKS
        run: |
          kubectl apply -f k8s/3-database -n ${{ env.K8S_NAMESPACE }}

      - name: delay for 30s
        run: sleep 30

      - name: Deploy backend to EKS
        run: |
          kubectl apply -f k8s/4-backend -n ${{ env.K8S_NAMESPACE }}

      - name: delay for 25s
        run: sleep 25

      - name: Apply Django Migrations
        run: |
          POD_NAME=$(kubectl get pod -l app=pokeclone-backend -n ${{ env.K8S_NAMESPACE }} -o jsonpath="{.items[0].metadata.name}")
          kubectl exec -it $POD_NAME -n ${{ env.K8S_NAMESPACE }} -- python manage.py migrate

      - name: Deploy frontend to EKS
        run: |
          kubectl apply -f k8s/5-frontend -n ${{ env.K8S_NAMESPACE }}